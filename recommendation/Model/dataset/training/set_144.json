[
    {
        "name": "Maximum 69 Number",
        "tags": [
            "math",
            "number manipulation",
            "digit substitution",
            "number properties"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/maximum-69-number/"
    },
    {
        "name": "Power of Three",
        "tags": [
            "math",
            "number properties",
            "exponentiation",
            "divisibility"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/power-of-three/"
    },
    {
        "name": "Puzzles",
        "tags": [
            "greedy",
            "sortings"
        ],
        "platforms": [
            "Codeforces"
        ],
        "level": "Easy",
        "link": "https://codeforces.com/problemset/problem/337/A"
    },
    {
        "name": "Majority Element",
        "tags": [
            "array",
            "hash table",
            "voting algorithm",
            "majority detection"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/majority-element/"
    },
    {
        "name": "Palindrome Linked List",
        "tags": [
            "linked list",
            "two pointers",
            "recursion",
            "palindrome detection"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/palindrome-linked-list/"
    },
    {
        "name": "Single Number",
        "tags": [
            "array",
            "bit manipulation",
            "algorithm"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/single-number/"
    },
    {
        "name": "Remove Duplicates from Sorted Array",
        "tags": [
            "array",
            "two pointers",
            "sorting",
            "algorithm"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/"
    },
    {
        "name": "Monkey Banana Problem",
        "tags": [
            "dp"
        ],
        "platforms": [
            "LightOJ"
        ],
        "level": "Easy",
        "link": "https://lightoj.com/problem/monkey-banana-problem"
    },
    {
        "name": "Fizz Buzz",
        "tags": [
            "math",
            "conditional statements",
            "looping",
            "interview prep"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/fizz-buzz/"
    },
    {
        "name": "How Many Numbers Are Smaller Than the Current Number",
        "tags": [
            "array",
            "sorting",
            "counting",
            "element comparison"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number/"
    },
    {
        "name": "Palindrome Number",
        "tags": [
            "math",
            "numerical algorithms",
            "string manipulation",
            "edge cases"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/palindrome-number/"
    },
    {
        "name": "Reverse Only Letters",
        "tags": [
            "string",
            "two pointers",
            "character manipulation",
            "letter reversal"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/reverse-only-letters/"
    },
    {
        "name": "Check If a String Contains All Binary Codes of Size K",
        "tags": [
            "string",
            "binary codes",
            "substring search",
            "bit manipulation"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k/"
    },
    {
        "name": "Remove Outermost Parentheses",
        "tags": [
            "string",
            "stack",
            "parentheses manipulation",
            "substring extraction"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/remove-outermost-parentheses/"
    },
    {
        "name": "Roman to Integer",
        "tags": [
            "string",
            "hash table",
            "conversion",
            "roman numerals"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/roman-to-integer/"
    },
    {
        "name": "Merge Strings Alternately",
        "tags": [
            "string",
            "string manipulation",
            "alternating merge",
            "character concatenation"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/merge-strings-alternately/"
    },
    {
        "name": "Goal Parser Interpretation",
        "tags": [
            "string",
            "parsing",
            "substring manipulation",
            "symbol interpretation"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/goal-parser-interpretation/"
    },
    {
        "name": "Valid Palindrome",
        "tags": [
            "string",
            "two pointers",
            "algorithm"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/valid-palindrome/"
    },
    {
        "name": "Count Good Triplets",
        "tags": [
            "array",
            "math",
            "combinations",
            "element comparison"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/count-good-triplets/"
    },
    {
        "name": "Maximum Subarray",
        "tags": [
            "array",
            "dp",
            "algorithm"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/maximum-subarray/"
    },
    {
        "name": "Flipping an Image",
        "tags": [
            "array",
            "image manipulation",
            "matrix transformation",
            "element flipping"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/flipping-an-image/"
    },
    {
        "name": "Move Zeroes",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/move-zeroes/"
    },
    {
        "name": "Design HashMap",
        "tags": [
            "hash table",
            "data structure",
            "map implementation",
            "hashing"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/design-hashmap/"
    },
    {
        "name": "Remove Duplicates from Sorted Array",
        "tags": [
            "Array",
            "Two Pointers"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/"
    },
    {
        "name": "Remove Outermost Parentheses",
        "tags": [
            "string",
            "stack",
            "parentheses manipulation",
            "substring extraction"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/remove-outermost-parentheses/"
    },
    {
        "name": "Intersection of Two Arrays II",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/intersection-of-two-arrays-ii/"
    },
    {
        "name": "Excel Sheet Column Number",
        "tags": [
            "math",
            "base conversion",
            "column numbering",
            "character manipulation"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/excel-sheet-column-number/"
    },
    {
        "name": "Valid Mountain Array",
        "tags": [
            "array",
            "mountain detection",
            "peak finding",
            "climbing rules"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Easy",
        "link": "https://leetcode.com/problems/valid-mountain-array/"
    },
    {
        "name": "Confusion In The Problemset",
        "tags": [
            "greedy"
        ],
        "platforms": [
            "LightOJ"
        ],
        "level": "Medium",
        "link": "https://lightoj.com/problem/confusion-in-the-problemset"
    },
    {
        "name": "Reverse Linked List II",
        "tags": [
            "linked list",
            "two pointers",
            "reverse"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Medium",
        "link": "https://leetcode.com/problems/reverse-linked-list-ii/"
    },
    {
        "name": "Distinct Numbers",
        "tags": [
            "math"
        ],
        "platforms": [
            "Codechef"
        ],
        "level": "Medium",
        "link": "https://www.codechef.com/problems/DISKMOV"
    },
    {
        "name": "Aladdin and the Return Journey",
        "tags": [
            "data structure"
        ],
        "platforms": [
            "LightOJ"
        ],
        "level": "Medium",
        "link": "https://lightoj.com/problem/aladdin-and-the-return-journe"
    },
    {
        "name": "Minimize Xor Difference",
        "tags": [
            "constructive",
            "bit manipulation",
            "adhoc"
        ],
        "platforms": [
            "Codechef"
        ],
        "level": "Medium",
        "link": "https://www.codechef.com/problems/XORDIF"
    },
    {
        "name": "A Secret Mission",
        "tags": [
            "data structure"
        ],
        "platforms": [
            "LightOJ"
        ],
        "level": "Medium",
        "link": "https://lightoj.com/problem/a-secret-mission"
    },
    {
        "name": "Mafia",
        "tags": [
            "greedy"
        ],
        "platforms": [
            "LightOJ"
        ],
        "level": "Medium",
        "link": "https://lightoj.com/problem/mafia"
    },
    {
        "name": "Unification",
        "tags": [
            "strings"
        ],
        "platforms": [
            "AtCoder"
        ],
        "level": "Medium",
        "link": "https://atcoder.jp/contests/abc120/tasks/abc120_c"
    },
    {
        "name": "All Possible Increasing Subsequences",
        "tags": [
            "data structure"
        ],
        "platforms": [
            "LightOJ"
        ],
        "level": "Medium",
        "link": "https://lightoj.com/problem/all-possible-inc-subseq"
    },
    {
        "name": "Palindrome Partitioning",
        "tags": [
            "backtracking",
            "string",
            "partitioning",
            "palindrome"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Medium",
        "link": "https://leetcode.com/problems/palindrome-partitioning/"
    },
    {
        "name": "Non Coprime Neighbours",
        "tags": [
            "constructive",
            "algorithm",
            "math"
        ],
        "platforms": [
            "Codechef"
        ],
        "level": "Medium",
        "link": "https://www.codechef.com/problems/NCOPRIMEN"
    },
    {
        "name": "Palindrome Partitioning",
        "tags": [
            "backtracking",
            "string",
            "partitioning",
            "palindrome"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Medium",
        "link": "https://leetcode.com/problems/palindrome-partitioning/"
    },
    {
        "name": "Marbles",
        "tags": [
            "dp"
        ],
        "platforms": [
            "LightOJ"
        ],
        "level": "Medium",
        "link": "https://lightoj.com/problem/marbles"
    },
    {
        "name": "Find Peak Element II",
        "tags": [
            "array",
            "binary search",
            "peak finding"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Medium",
        "link": "https://leetcode.com/problems/find-peak-element-ii/"
    },
    {
        "name": "Number of Islands",
        "tags": [
            "depth-first search",
            "breadth-first search",
            "union-find",
            "graph",
            "island counting"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Medium",
        "link": "https://leetcode.com/problems/number-of-islands/"
    },
    {
        "name": "Chef and Square",
        "tags": [
            "constructive",
            "geometry",
            "adhoc",
            "algorithm",
            "math"
        ],
        "platforms": [
            "Codechef"
        ],
        "level": "Medium",
        "link": "https://www.codechef.com/problems/CHEFSQUA"
    },
    {
        "name": "Longest Substring Without Repeating Characters",
        "tags": [
            "hash table",
            "two pointers",
            "string"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Medium",
        "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters/"
    },
    {
        "name": "Best Cake Ever",
        "tags": [
            "constructive",
            "bit manipulation",
            "algorithm",
            "math"
        ],
        "platforms": [
            "Codechef"
        ],
        "level": "Medium",
        "link": "https://www.codechef.com/problems/KMXOR"
    },
    {
        "name": "Merge Intervals",
        "tags": [
            "array",
            "sorting",
            "interval",
            "merge"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Medium",
        "link": "https://leetcode.com/problems/merge-intervals/"
    },
    {
        "name": "Chef and Strange Formula",
        "tags": [
            "math"
        ],
        "platforms": [
            "Codechef"
        ],
        "level": "Medium",
        "link": "https://www.codechef.com/problems/STFM"
    },
    {
        "name": "Permutations II",
        "tags": [
            "array",
            "backtracking",
            "recursion",
            "permutations"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Medium",
        "link": "https://leetcode.com/problems/permutations-ii/"
    },
    {
        "name": "Valid Parentheses",
        "tags": [
            "string",
            "stack",
            "parentheses",
            "validity checking"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Medium",
        "link": "https://leetcode.com/problems/valid-parentheses/"
    },
    {
        "name": "A puzzle game",
        "tags": [
            "data structure",
            "dp",
            "algorithm"
        ],
        "platforms": [
            "Codechef"
        ],
        "level": "Medium",
        "link": "https://www.codechef.com/problems/H1"
    },
    {
        "name": "Chef and Tetris",
        "tags": [
            "data structure",
            "adhoc",
            "algorithm",
            "constructive"
        ],
        "platforms": [
            "Codechef"
        ],
        "level": "Medium",
        "link": "https://www.codechef.com/problems/CHEFTET"
    },
    {
        "name": "Insert Interval",
        "tags": [
            "array",
            "sorting",
            "interval",
            "merge"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Medium",
        "link": "https://leetcode.com/problems/insert-interval/"
    },
    {
        "name": "Minimum Window Substring",
        "tags": [
            "string",
            "hash table",
            "two pointers",
            "substring"
        ],
        "platforms": [
            "LeetCode"
        ],
        "level": "Hard",
        "link": "https://leetcode.com/problems/minimum-window-substring/"
    }
]